예외(Exception)

예외란 실행 중에 발생할 수 있는, 개발자가 구현한 로직에서 발생하는 문제를 말한다(*로직과 관계없는 문제는 오류로 정의한다).
런타임 중에 문제가 발생하면 메소드는 예외를 던져 문제 발생을 알린다. 예외 처리가 안 되면, TASK가 완료되기 전에 실행은 멈춰버리게 되지만, 예외 처리를 하면 플로우는 계속될 수 있다.

예외 처리를 해서 얻을 수 있는 이점
  - 실행을 멈추지 않고 진행하게 할 수 있다.
  - 개발자가 문제를 확인할 수 있다.

[복구형] Try/Catch 블록
예외 발생 가능성 있는 코드를 try문으로 감싸고, 발생 시에 처리는 catch에서 받아서 한다. 즉, 트라이 캐치 블록을 사용하면 해당 메소드에서 예외를 처리하게 된다.

[회피형] throw 키워드 선언
메소드 끝단에 throws Exception 을 선언하여 처리한다. 예외 발생 시, 메소드를 호출한 코드로 예외를 되돌려 보내서 처리하게 하는 방식이다.

[전환형] catch에서 다른 예외를 던지는 것